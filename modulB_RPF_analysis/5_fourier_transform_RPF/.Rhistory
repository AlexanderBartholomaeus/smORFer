# load library
library(seqinr)
library(Biostrings)
rpf <- read.table('../4_count_RPF/output/RPF_candidates_perNT.txt',header=T,stringsAsFactors = F)
head(rpf)
rpf <- read.table('../4_count_RPF/output/RPF_candidates_perNT.txt',header=F,stringsAsFactors = F)
u_genes <- unique(rpf[,1:6])
cutoff <- 3
get_FT_signal = function(counts, normalize = T, full_output = F){
# check if length diviable by 3
if( length(counts)%%3 == 0){
# get frequency (x-axis) for FT transform
# this is a bit complicated to explain and understand (we can try later)
freq <- length(counts)/(0:(length(counts)-1))
# perform fast FT
ft <- abs(fft(counts))
# normalize by length
if(normalize){
ft <- ft / length(counts)
}
# get identity of period 3 and 1.5 together with mean of inter-regions
idx3 <- which(freq == 3)
idx15 <- which(freq == 1.5)
res <- c(
ft[idx15],
ft[idx3],
mean(ft[(idx3+1):(idx15-1)]),
mean(ft[(idx15+1):(length(ft))])
)
# return
if(!full_output){
res
} else {
list(
res = res,
ft = ft,
freq = freq
)
}
# else skip with message
} else {
cat('skipped\n')
NULL
}
}
storeFT <- matrix(NA, nrow=nrow(u_genes),ncol=4)
for(i in 1:nrow(u_genes)){
# status print status every 100 genes / ORFs
if(i %% 100 == 0){
cat(paste0(i, ' genes/ORFs processed \n'))
}
# get counts for selected gene only
rpf_sel <- rpf[rpf[,4]==u_genes[i,4],]
# check if dividable by 3 (including -100 because counts have +-50nt)
if((nrow(rpf_sel)-100)%%3 == 0){
# do FT transform (remove 50nt at start and end)
ft <- get_FT_signal(rpf_sel[51:(nrow(rpf_sel)-50),8])
storeFT[i,1:4] <- ft
} else {
# if not dividable by 3 print skipped
print('skipped')
}
}
dim(rpf)
u_genes
i=1
cat(paste0(i, ' genes/ORFs processed \n'))
rpf_sel <- rpf[rpf[,4]==u_genes[i,4],]
rpf_sel
(nrow(rpf_sel)
)
nrow(rpf_sel)%%3
ft <- get_FT_signal(rpf_sel[,8])
storeFT[i,1:4] <- ft
storeFT[i,1:4] <- ft
storeFT <- matrix(NA, nrow=nrow(u_genes),ncol=4)
for(i in 1:nrow(u_genes)){
# status print status every 100 genes / ORFs
if(i %% 100 == 0){
cat(paste0(i, ' genes/ORFs processed \n'))
}
# get counts for selected gene only
rpf_sel <- rpf[rpf[,4]==u_genes[i,4],]
# check if dividable by 3
if(nrow(rpf_sel)%%3 == 0){
# do FT transform (remove 50nt at start and end)
ft <- get_FT_signal(rpf_sel[,8])
storeFT[i,1:4] <- ft
} else {
# if not dividable by 3 print skipped
print('skipped')
}
}
idx <- which(storeFT[,2]/storeFT[,3] > cutoff) # this is the genes we would be interested
verified <- cbind(u_genes[idx,],round(storeFT[,2]/storeFT[,3], digits=6))
head(storeFT)
dim(storeFT)
verified <- cbind(u_genes[idx,],round(storeFT[idx,2]/storeFT[idx,3], digits=6))
colnames(verified)[7] <- 'FT_ratio'
write.table(verified,'output/RPF_verified.txt', sep = "\t", col.names = F, row.names = F, quote = F)
